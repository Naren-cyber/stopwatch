import{useEffect as n,useState as i}from"../../_snowpack/pkg/react.js";import{useIntl as p}from"../../_snowpack/pkg/react-intl.js";import{BehaviorSubject as u}from"../../_snowpack/pkg/rxjs.js";import{isString as m}from"../../_snowpack/pkg/taio/build/utils/validator/primitive.js";import{assertThat as d,record as f}from"../../_snowpack/pkg/taio/build/utils/validator/utils.js";import{createCleanUp as g,setStateEffect as w}from"../../utils/well-typed.js";import{createMessages as h}from"../../shared-utils.js";import{isLocales as j,Locales as a}from"../../locales.js";import{die as k}from"../../_snowpack/pkg/taio/build/utils/internal/exceptions.js";const c=document.querySelector("html")?.lang,l=window.$locale=new u(j(c)?c:a.English);export const useLocale=()=>{const[t,s]=i(l.value);return n(()=>g(l.subscribe(w(s))),[]),t};const L=(()=>{const t={},s=async e=>{switch(e){case a.English:return(await import("../en.js")).en;case a.SimplifiedChinese:return(await import("../zh-CN.js")).zhCN;default:return k()}};return async e=>{const o=t[e];return o||(t[e]=h(await s(e)))}})();export const useLazyLoadLocaleMessages=t=>{const[s,e]=i();return n(()=>{L(t).then(e)},[t]),s};const y=d(f(m));export const useTypedIntl=()=>{const t=p();return(e,...o)=>{const r=o[0]??{};return y(r),t.formatMessage({id:e},r)}};
