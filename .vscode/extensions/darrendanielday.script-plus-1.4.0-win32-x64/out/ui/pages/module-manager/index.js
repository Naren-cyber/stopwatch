import{Box as g,Button as M,FormControl as l,FormLabel as d,Input as $,useTheme as R,Checkbox as V,FormControlLabel as F}from"../../_snowpack/pkg/@material-ui/core.js";import{AddOutlined as O,RefreshOutlined as B}from"../../_snowpack/pkg/@material-ui/icons.js";import e,{useEffect as G,useRef as A,useState as i}from"../../_snowpack/pkg/react.js";import{useLoadingPipe as k}from"../../hooks/use-loading.js";import{useStyles as H}from"../../components/common/common-mui-styles.js";import S from"../../components/common/common.module.css.proxy.js";import{ListPicker as U}from"../../components/list-picker/index.js";import*as a from"../../_snowpack/pkg/ramda.js";import{debounceTime as q,filter as z,Subject as D}from"../../_snowpack/pkg/rxjs.js";import j from"../../_snowpack/pkg/classnames.js";import{isString as J}from"../../_snowpack/pkg/taio/build/utils/validator/primitive.js";import{Skeleton as K}from"../../components/skeleton/index.js";import{EnumPicker as Q}from"../../components/enum-picker/index.js";import{InstallPosition as r}from"../../configurations.js";import{useTypedIntl as W}from"../../i18n/core/locale.js";import{noop as X}from"../../_snowpack/pkg/taio/build/utils/typed-function.js";export const ModuleManager=()=>{const t=H(),f=R(),n=W(),m=A(),[s,I]=i(""),[P,h]=i([]),[v,w]=i(""),[b,y]=i(!0),[C,E]=i(r.Local),[p,x]=k(()=>{const o=SessionInvoker.PackageService.installPackage(s,v,{global:C===r.Global}),u=b?SessionInvoker.PackageService.installPackage(`@types/${s}`,""):Promise.resolve();return Promise.all([o,u])},X),[N,T]=k(async o=>o?SessionInvoker.PackageService.listVersions(o):[],h),[_,L]=k(()=>SessionInvoker.ConfigService.getConfigs(),a.pipe(a.identity(a.identity),a.tap(o=>y(o.packages.installTypes)),a.tap(o=>E(o.packages.installPosition))));return G(()=>{L(),m.current=new D;const o=m.current.pipe(q(1e3),z(J)).subscribe(c=>T(c)),u=SessionHubs.on("config",({fullConfig:c})=>{y(c.packages.installTypes),E(c.packages.installPosition)});return()=>{o.unsubscribe(),u()}},[]),_?null:e.createElement(g,null,e.createElement(g,{className:S["center-row"]},e.createElement(l,{className:t.formControl},e.createElement(d,null,n("manager.module.id.label")),e.createElement($,{value:s,onChange:o=>{I(o.target.value),m.current?.next(o.target.value)}})),e.createElement(l,{className:j(t.formControl,t.selectControl)},e.createElement(d,null,n("manager.module.version.label")),N?e.createElement(K,{width:100,height:f.spacing(6)}):e.createElement(U,{value:v,onChange:w,list:P,displayMapping:a.identity})),e.createElement(l,{className:t.formControl},e.createElement(M,{color:"primary",variant:"outlined",onClick:x,disabled:p||!s,style:{color:f.palette.primary.main},startIcon:p?e.createElement(B,{className:S.spinning}):e.createElement(O,null)},n(p?"manager.module.install.installing":"manager.module.install.apply")))),e.createElement(g,null,e.createElement(l,{className:j(t.formControl,t.selectControl)},e.createElement(d,null,n("manager.module.scope.label")),e.createElement(Q,{value:C,onChange:o=>SessionInvoker.ConfigService.updateConfigs({packages:{installPosition:o}}),enumObject:r,enumNameMapping:{[r.Local]:n("manager.module.scope.mapping.local"),[r.Global]:n("manager.module.scope.mapping.global")}})),s&&e.createElement(l,{className:t.formControl},e.createElement(F,{control:e.createElement(V,{checked:b,onChange:o=>{SessionInvoker.ConfigService.updateConfigs({packages:{installTypes:o.target.checked}})}}),label:n("manager.module.options.installTypes",{moduleId:`@types/${s}`})}))))};
