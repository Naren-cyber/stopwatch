import e,{useEffect as j,useState as m}from"../../_snowpack/pkg/react.js";import*as o from"../../_snowpack/pkg/ramda.js";import{Accordion as x,AccordionActions as C,AccordionDetails as h,AccordionSummary as A,Box as p,Button as f,CircularProgress as B,colors as D,Tooltip as L,Typography as u,useTheme as z}from"../../_snowpack/pkg/@material-ui/core.js";import{ParameterInput as F}from"../../components/parameter-input/index.js";import{ScriptPicker as H}from"../../components/script-picker/index.js";import{setStateEffect as T}from"../../utils/well-typed.js";import{noop as d}from"../../_snowpack/pkg/taio/build/utils/typed-function.js";import{ClearAll as M,ExpandMore as b,PlayArrowRounded as N,Queue as O}from"../../_snowpack/pkg/@material-ui/icons.js";import Q from"../../components/common/common.module.css.proxy.js";import{useLoadingPipe as V}from"../../hooks/use-loading.js";import{useTypedIntl as q}from"../../i18n/core/locale.js";import{getDisplay as v}from"../../shared-utils.js";import{PresetTools as G}from"../../components/preset-tools/index.js";export const ScriptRunner=({})=>{const w=z(),r=q(),[n,P]=m(),[k,E]=m({}),[a,S]=m(!1),[U,y]=m([]),[s,i]=m(),[c,R]=V(async()=>{const t=s?.taskId;t&&await SessionInvoker.ScriptService.cleanUp(t)},d),I=async()=>{await R(),i(void 0),y([])},_=async t=>{await window.SessionInvoker.ScriptService.mountTask(t),i(void 0),y([])};return j(n?o.pipe(o.always(void 0),T(i),o.always(n),o.prop("argumentConfig"),o.map(o.prop("defaultValue")),T(E),d):d,[n]),j(!s||!a?d:o.pipe(o.always(s),t=>SessionHubs.on("task",l=>{if(t.taskId===l.taskId){if(l.type==="terminate"){l.hasCleanUp||i(void 0),S(!1);return}if(l.type==="output"){y(g=>[...g,l.output]);return}}})),[a,s]),e.createElement(p,null,e.createElement(H,{value:n,onChange:P}),!!n&&e.createElement(e.Fragment,null,e.createElement(x,null,e.createElement(A,{expandIcon:e.createElement(b,null)},e.createElement(u,null,n.name)),e.createElement(h,null,e.createElement(p,null,e.createElement(u,null,n.description),e.createElement(G,{currentArguments:k,script:n,onLoadPreset:t=>{E(t.args)}}),e.createElement(F,{arugmentConfig:n.argumentConfig,value:k,onChange:E}))),e.createElement(C,null,e.createElement(f,{startIcon:a||c?e.createElement(B,{size:w.spacing(1.5)}):e.createElement(N,null),disabled:a||c,style:{color:w.palette.primary.main},onClick:async()=>{await I();const t=await SessionInvoker.ScriptService.execute(n,k);S(!0),i(t)}},r(c?"runner.run.cleaning":a?"runner.run.running":"runner.run.apply")))),e.createElement(x,null,e.createElement(A,{expandIcon:e.createElement(b,null)},e.createElement(u,null,r("runner.console.title"))),e.createElement(h,null,e.createElement(p,{className:Q["max-width"]},U.map((t,l)=>e.createElement(p,{style:{whiteSpace:"pre-wrap",wordBreak:"break-all"},key:l},e.createElement(u,{variant:"h6",display:"block",gutterBottom:!0},"[ ",t.level.toUpperCase()," ]",": ",Array.isArray(t.payload)?t.payload.map(g=>v(g)).join(", "):v(t)))))),e.createElement(C,null,e.createElement(L,{title:r("runner.mount.tooltip")},e.createElement(f,{style:{color:D.yellow[400]},startIcon:e.createElement(O,null),onClick:()=>s&&_(s.taskId),disabled:c||a},r("runner.mount.button"))),e.createElement(f,{color:"secondary",startIcon:e.createElement(M,null),onClick:I,disabled:c||a},r(c?"runner.cleanUp.cleaning":"runner.cleanUp.apply"))))))};
