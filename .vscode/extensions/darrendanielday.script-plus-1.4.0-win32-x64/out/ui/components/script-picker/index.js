import{makeStyles as y,Box as j,IconButton as S,colors as w,FormControl as E,InputLabel as L}from"../../_snowpack/pkg/@material-ui/core.js";import{RefreshOutlined as h}from"../../_snowpack/pkg/@material-ui/icons.js";import*as o from"../../_snowpack/pkg/ramda.js";import e,{useEffect as C,useState as p}from"../../_snowpack/pkg/react.js";import{noop as b}from"../../_snowpack/pkg/taio/build/utils/typed-function.js";import{useLoadingPipe as v}from"../../hooks/use-loading.js";import{useTypedIntl as N}from"../../i18n/core/locale.js";import{isNonNullish as _,setStateEffect as x}from"../../utils/well-typed.js";import a from"../common/common.module.css.proxy.js";import{ListPicker as m}from"../list-picker/index.js";const I=y(t=>({formControl:{margin:t.spacing(1)},selectControl:{margin:t.spacing(1),width:t.spacing(15)}}));export const ScriptPicker=({onChange:t})=>{const u=I(),r=N(),[d,k]=p([]),[s,f]=p(void 0),c=o.when(_,o.compose(t??b,x(f))),[l,i]=v(()=>SessionInvoker.ScriptService.getList(),n=>{k(n),c(n.find(g=>g.name===s?.name)??n[0])});return C(o.pipe(i,()=>window.SessionHubs.on("script-list-update",i)),[]),e.createElement(j,{className:a["center-row"]},e.createElement(S,{style:{color:w.green[600]},onClick:i,disabled:l,className:l?a.spinning:void 0},e.createElement(h,null)),s==null?r("components.picker.script.empty"):e.createElement(E,{className:u.selectControl},e.createElement(L,null,r("components.picker.script.label")),e.createElement(m,{list:d,value:s,onChange:c,displayMapping:o.prop("name"),identity:m.key("name")})))};
