import e from"../../_snowpack/pkg/react.js";import*as b from"../../_snowpack/pkg/ramda.js";import{Box as c,Checkbox as j,FormControl as l,FormControlLabel as _,FormHelperText as p,Input as u,InputLabel as w}from"../../_snowpack/pkg/@material-ui/core.js";import C from"../../_snowpack/pkg/classnames.js";import{die as F}from"../../_snowpack/pkg/taio/build/utils/internal/exceptions.js";import{isUnionThat as N}from"../../_snowpack/pkg/taio/build/utils/validator/array.js";import{isNumber as x,isString as v}from"../../_snowpack/pkg/taio/build/utils/validator/primitive.js";import{isBooleanArgumentField as O,isEnumArgumentField as k,isNumberArgumentField as h,isStringArgumentField as A}from"../../script.js";import{useStyles as d}from"../common/common-mui-styles.js";import{EnumPicker as B}from"../enum-picker/index.js";export const ParameterInput=({value:o,onChange:a,arugmentConfig:g})=>{const s=d();return e.createElement(c,null,Object.entries(g).map(([r,t],i)=>{const m=o[r];return O(t)?e.createElement(c,{key:i},e.createElement(l,{className:s.formControl},e.createElement(_,{label:r,control:e.createElement(j,{checked:!!m,onChange:(n,E)=>a({...o,[r]:E})})}),e.createElement(p,null,t.description))):e.createElement(c,{key:i},e.createElement(l,{className:C(b.filter(Boolean,[s.formControl,k(t)?s.selectControl:void 0]))},e.createElement(w,null,r),A(t)?e.createElement(u,{value:m??"",onChange:n=>a({...o,[r]:`${n.target.value}`})}):h(t)?e.createElement(u,{type:"number",value:m??0,onChange:n=>a({...o,[r]:+n.target.value})}):k(t)?e.createElement(B,{enumObject:t.enumOptions.enumObject,enumNameMapping:t.enumOptions.enumNameMapping,value:N(v,x)(m)?m:"",onChange:n=>a({...o,[r]:n})}):F(),e.createElement(p,null,t.description)))}))};
